---
import Home from "../icons/Home.astro";
import About from "../icons/About.astro";
import Skills from "../icons/Skills.astro";
import Projects from "../icons/Projects.astro";
import Mail from "../icons/Mail.astro";
---

<nav
  class="fixed h-fit w-fit bg-[#1A1E23] top-[20%] left-[3%] z-50 rounded-full px-2 py-2 grid gap-5 border-[1px]"
>
  <a
    href="#top"
    class="rounded-full transition-all ease-in duration-[200ms] hover:bg-white hover:text-black"
  >
    <Home class="size-8 p-[8px]" />
  </a>
  <a
    href="#about"
    class="rounded-full transition-all ease-in duration-[200ms] hover:bg-white hover:text-black"
  >
    <About class="size-8 p-[8px]" />
  </a>
  <a
    href="#skills"
    class="rounded-full transition-all ease-in duration-[200ms] hover:bg-white hover:text-black"
  >
    <Skills class="size-8 p-[8px]" />
  </a>
  <a
    href="#projects"
    class="rounded-full transition-all ease-in duration-[200ms] hover:bg-white hover:text-black"
  >
    <Projects class="size-8 p-[8px]" />
  </a>
  <a
    href="#contact"
    class="rounded-full transition-all ease-in duration-[200ms] hover:bg-white hover:text-black"
  >
    <Mail class="size-8 p-[8px]" />
  </a>
</nav>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("section");
    const navLinks = document.querySelectorAll("nav a");

    const observer = new IntersectionObserver(
      (entries) => {
        let activeSectionFound = false;

        entries.forEach((entry) => {
          const id = entry.target.getAttribute("id");
          const navLink = document.querySelector(`nav a[href="#${id}"]`);

          if (entry.isIntersecting) {
            navLinks.forEach((link) => link.classList.remove("active"));
            navLink.classList.add("active");
            activeSectionFound = true;
          }
        });

        // Verifica si alguna sección está activa
        if (!activeSectionFound) {
          // Encuentra la sección más cercana al centro de la ventana gráfica
          let closestSection = null;
          let minDistance = Number.POSITIVE_INFINITY;

          sections.forEach((section) => {
            const rect = section.getBoundingClientRect();
            const distance = Math.abs(rect.top - window.innerHeight / 2);

            if (distance < minDistance) {
              minDistance = distance;
              closestSection = section;
            }
          });

          // Activa la sección más cercana
          if (closestSection) {
            navLinks.forEach((link) => link.classList.remove("active"));
            const closestNavLink = document.querySelector(
              `nav a[href="#${closestSection.id}"]`
            );
            closestNavLink.classList.add("active");
          }
        }
      },
      { threshold: [0.3, 0.7] } // Ajuste del umbral
    );

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Evento de scroll para detectar la parte superior de la página
    window.addEventListener("scroll", () => {
      if (window.scrollY === 0) {
        navLinks.forEach((link) => link.classList.remove("active"));
        document.querySelector('nav a[href="#top"]').classList.add("active");
      }
    });
  });
</script>

<style>
  nav a.active {
    background-color: white;
    color: black;
  }
</style>
